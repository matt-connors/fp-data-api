generator kysely {
    provider = "prisma-kysely"
    output   = "../src"
    fileName = "types.ts"
}

generator client {
    provider = "prisma-client-js"
    output   = "../prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("WRANGLER_HYPERDRIVE_LOCAL_CONNECTION_STRING_fitness-db")
}

// Enums

enum PermissionAction {
    VIEW
    EDIT
    CREATE
    DELETE
    MANAGE
}

enum Resource {
    TEST
    TEST2
}

// Auth-related models

model Role {
    id          Int          @id @default(autoincrement())
    roleName    String       @unique
    userRoles   UserRole[]
    permissions Permission[] // Many-to-many relation
}

model Permission {
    id          Int              @id @default(autoincrement())
    description String
    action      PermissionAction
    resource    Resource
    roles       Role[] // Many-to-many relation
    // endpoints   Endpoints[]

    @@unique([action, resource])
}

model UserRole {
    userId Int
    roleId Int
    user   User @relation(fields: [userId], references: [id])
    role   Role @relation(fields: [roleId], references: [id])

    @@id([userId, roleId])
    @@index([roleId])
}

// Endpoints model

// model Endpoints {
//     endpoint    String       @id
//     permissions Permission[]
// }

// Data-related models

model User {
    id        Int        @id @default(autoincrement())
    email     String     @unique
    password  String
    userRoles UserRole[]
    trainerId Int?
    trainer   Trainer?   @relation(fields: [trainerId], references: [id])
}

model Trainer {
    id    Int    @id @default(autoincrement())
    users User[]
}

// model Form {
//     assignedTo ....
// }
